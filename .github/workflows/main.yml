name: Test and Deploy Next.js

on:
  push:
    branches:
      - deploy # Deploy to EC2 only after push to `deploy`

  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  prettier-check:
    name: Prettier check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.10.2
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: pnpm install
      - name: Run prettier check
        run: pnpm prettier:check

  eslint-check:
    name: Eslint check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.10.2
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: pnpm install
      - name: Run eslint check
        run: pnpm eslint:format

  jest-check:
    name: Tests - jest
    needs: [prettier-check, eslint-check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.10.2
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: pnpm install
      - name: Run tests
        run: pnpm test:ci
        env:
          CI: true

  build:
    name: Build Docker Image
    needs: [jest-check]
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: sebastiankociuba/next-boilerplate:latest

  deploy:
    name: Deploy to EC2
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Container on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Aktualizacja pakietów i instalacja Dockera (jeśli nie jest zainstalowany)
            sudo apt update -y && sudo apt install -y docker.io

            # Upewnienie się, że użytkownik "ubuntu" może uruchamiać Dockera bez sudo
            sudo usermod -aG docker ubuntu

            # Pobranie najnowszej wersji obrazu z Docker Hub
            docker pull sebastiankociuba/next-boilerplate:latest

            # Zatrzymanie i usunięcie starego kontenera (jeśli istnieje)
            docker stop next-boilerplate || true
            docker rm next-boilerplate || true

            # Uruchomienie nowego kontenera w tle na porcie 3000
            docker run -d \
              --name next-boilerplate \
              -p 3000:3000 \
              --env-file /home/ubuntu/.env \
              --restart unless-stopped \
              sebastiankociuba/next-boilerplate:latest
