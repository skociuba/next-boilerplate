name: Test and Deploy Next.js

on:
  push:
    branches:
      - deploy # Deploy to EC2 only after push to `deploy`

  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  prettier-check:
    name: Prettier check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.10.2
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: pnpm install
      - name: Run prettier check
        run: pnpm prettier:check

  eslint-check:
    name: Eslint check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.10.2
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: pnpm install
      - name: Run eslint check
        run: pnpm eslint:format

  jest-check:
    name: Tests - jest
    needs: [prettier-check, eslint-check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.10.2
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: pnpm install
      - name: Run tests
        run: pnpm test:ci
        env:
          CI: true

  nextjs-build:
    name: Build Docker Image on EC2
    needs: [jest-check]
    runs-on: ubuntu-latest
    steps:
      - name: Build Docker Image on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo rm -rf ~/app
            mkdir -p ~/app
            cd ~/app

            # Klonowanie repozytorium
            git clone https://github.com/skociuba/next-boilerplate .

            # Budowanie obrazu Dockera
            sudo docker build -t next-boilerplate:latest -f Dockerfile.prod .

  deploy:
    name: Deploy to EC2
    needs: [nextjs-build] # Deploy tylko po zbudowaniu obrazu
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Container on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Zatrzymanie starego kontenera
            sudo docker stop next-boilerplate || true
            sudo docker rm next-boilerplate || true

            # Uruchomienie nowego kontenera
            sudo docker run -d --name next-boilerplate -p 3000:3000 --env-file .env next-boilerplate:latest
